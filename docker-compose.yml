version: '3.8'

services:
  # Servicio de la base de datos PostgreSQL
  db_postgres:
    image: postgres:15-alpine # Usa una imagen oficial de PostgreSQL, 15-alpine es ligera
    restart: always # Asegura que el contenedor se reinicie automáticamente
    environment:
      # Variables de entorno para configurar PostgreSQL
      POSTGRES_DB: ReservationApp
      POSTGRES_USER: ReservationApp_user
      POSTGRES_PASSWORD: password123 # ¡Debe coincidir con la de appsettings.json!
    ports:
      - "5432:5432" # Mapea el puerto del contenedor (5432) al puerto de tu máquina local (5432)
    volumes:
      # Persistencia de datos: Evita perder tus datos si el contenedor se elimina
      - pgdata:/var/lib/postgresql/data
    healthcheck: # Opcional: Para verificar que la DB esté lista antes de que otros servicios se conecten
      test: ["CMD-SHELL", "pg_isready -U ReservationApp_user -d ReservationApp"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Servicio de tu aplicación .NET (Tu backend)
  event_reservation_app:
    build:
      context: . # El contexto es la raíz de tu solución Docker Compose
      dockerfile: ./EventResourceReservationApp.Api/Dockerfile # Ruta a tu Dockerfile de la API
    ports:
      - "8080:8080" # Mapea el puerto de tu aplicación al puerto de tu máquina local
    environment:
      ConnectionStrings__DefaultConnection: "Host=db_postgres;Port=5432;Database=ReservationApp;Username=ReservationApp_user;Password=password123"
    depends_on:
      db_postgres:
        condition: service_healthy # Asegura que la app espere a que la DB esté saludable
    # volumes:
    #   - ./EventResourceReservationApp.Api:/app # Esto asume que el Dockerfile está en la raíz, no en una subcarpeta
    #   - ~/.nuget/packages:/root/.nuget/packages
volumes:
    pgdata: # Declara el volumen con nombre 'pgdata'
    # docker compose -f docker-compose.yml up --build -d  cuando necesites reconstruir las imágenes (cambios en código o Dockerfile) o la primera vez.
    # docker compose -f docker-compose.yml up -d   cuando tus imágenes ya están actualizadas y solo quieres levantar los contenedores o asegurarte de que estén corriendo con la configuración existente.
    # docker compose -f docker-compose.yml down    Para detener y eliminar los contenedores, redes y volúmenes (si no los has definido como externos). Esto es útil cuando terminas de trabajar o necesitas un borrón y cuenta nueva.